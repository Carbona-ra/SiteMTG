{% extends 'base.html.twig' %}

{% block title %}Deck{% endblock %}

{% block body %}
<div class="min-h-screen dark:bg-neutral-800 text-white">
    <div class="container mx-auto py-8 px-4">
        <h1 class="text-4xl font-bold text-red-500 mb-8">Deck</h1>

        <div class="flex">
            <!-- Commander Section -->
            <div class="w-1/4">
                <div class="bg-gray-800 rounded-lg p-4 shadow-lg">
                    <h2 class="text-2xl font-bold mb-4">{{ deck.commanderName }}</h2>
                    <div class="aspect-w-3 aspect-h-4 bg-gray-700 rounded-lg mb-4 overflow-hidden">
                        {% if commanderImage %}
                            <img src="{{ commanderImage }}" alt="{{ deck.commanderName }} image" class="w-full h-full object-cover">
                        {% else %}
                            <div class="flex items-center justify-center h-full">
                                <span class="text-white text-center">Image not available</span>
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>

            <!-- Deck Info and Cards Section -->
            <div class="w-3/4 pl-8">
                <div class="bg-gray-800 rounded-lg p-6 shadow-lg mb-8">
                    <h2 class="text-2xl font-bold text-red-500 mb-4">Deck Information</h2>
                    <table class="w-full text-left">
                        <tbody>
                            <tr>
                                <th class="py-2 px-4">Id</th>
                                <td class="py-2 px-4">{{ deck.id }}</td>
                            </tr>
                            <tr>
                                <th class="py-2 px-4">Name</th>
                                <td class="py-2 px-4">{{ deck.name }}</td>
                            </tr>
                            <tr>
                                <th class="py-2 px-4">Image Name</th>
                                <td class="py-2 px-4">{{ deck.imageName }}</td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                {% if isOwner %}
                    <h3 class="text-xl font-bold text-red-500 mt-6">Add a Card</h3>
                    <form id="add-card-form" class="mt-4 flex">
                        <input type="hidden" name="deck_id" value="{{ deck.id }}">
                        <input type="text" id="card_name" name="card_name" required
                            class="flex-grow bg-gray-700 text-white rounded-lg p-2 mr-2 focus:ring-2 focus:ring-red-500 focus:outline-none"
                            placeholder="Enter card name">
                        <button type="submit"
                                class="bg-red-500 text-white rounded-lg px-4 py-2 hover:bg-red-700 transition-colors">
                            Add Card
                        </button>
                    </form>
                {% endif %}

                <div class="bg-gray-800 rounded-lg p-6 shadow-lg" data-deck-id="{{ deck.id }}">
                    <h2 class="text-2xl font-bold text-red-500 mb-4">Cards</h2>
                    <ul id="card-list" class="space-y-2">
                        {% for card in cards %}
                            <li class="relative bg-gray-700 rounded-lg px-4 py-2 flex justify-between items-center group" data-card-id="{{ card.id }}">
                                <span class="card-name" data-card-image="{{ cardImages[card.name] }}">{{ card.name }}</span>
                                {% if isOwner %}
                                    <button data-card-id="{{ card.id }}" class="remove-card-btn text-red-500 hover:text-red-700">
                                        Remove
                                    </button>
                                {% endif %}
                            </li>
                        {% endfor %}
                    </ul>
                </div>
            </div>
        </div>

        <div class="mt-8">
            <a href="{{ path('app_deck_index') }}" class="bg-red-500 text-white rounded-lg px-4 py-2 hover:bg-red-700 transition-colors">Back to list</a>
            {% if isOwner %}
                <a href="{{ path('app_deck_edit', {'id': deck.id}) }}" class="bg-red-500 text-white rounded-lg px-4 py-2 hover:bg-red-700 transition-colors">Edit</a>
                {{ include('deck/_delete_form.html.twig') }}
            {% endif %}
        </div>
    </div>
</div>

<!-- Image container to follow the mouse -->
<div id="card-image-hover" class="absolute pointer-events-none hidden">
    <img id="hovered-card-image" src="" alt="Card image" class="w-60 h-auto object-cover rounded-lg shadow-lg">
</div>
{% if isOwner %}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const cardImageHover = document.getElementById('card-image-hover');
            const hoveredCardImage = document.getElementById('hovered-card-image');
            const cardList = document.getElementById('card-list');
            const addCardForm = document.getElementById('add-card-form');

            // Hover image functionality with event delegation
            cardList.addEventListener('mouseover', function(event) {
                const cardNameElement = event.target.closest('.card-name');
                if (cardNameElement) {
                    const imageUrl = cardNameElement.dataset.cardImage;
                    if (imageUrl) {
                        hoveredCardImage.src = imageUrl;
                        cardImageHover.classList.remove('hidden');
                    }
                }
            });

            cardList.addEventListener('mousemove', function(event) {
                const hoverWidth = cardImageHover.offsetWidth;
                const hoverHeight = cardImageHover.offsetHeight;
                const pageWidth = window.innerWidth;
                const pageHeight = window.innerHeight;
                let left = event.pageX + 20;
                let top = event.pageY + 20;

                if (left + hoverWidth > pageWidth) {
                    left = event.pageX - hoverWidth - 20;
                }

                if (top + hoverHeight > pageHeight) {
                    top = event.pageY - hoverHeight - 20;
                }

                cardImageHover.style.left = `${left}px`;
                cardImageHover.style.top = `${top}px`;
            });

            cardList.addEventListener('mouseout', function(event) {
                const cardNameElement = event.target.closest('.card-name');
                if (cardNameElement) {
                    cardImageHover.classList.add('hidden');
                }
            });

            // Add card to list
            if (addCardForm) {
                addCardForm.addEventListener('submit', function(event) {
                    event.preventDefault();
                    
                    const formData = new FormData(this);
                    
                    fetch('{{ path('app_card_add') }}', {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.status === 'success') {
                            const newCard = document.createElement('li');
                            newCard.classList.add('relative', 'bg-gray-700', 'rounded-lg', 'px-4', 'py-2', 'flex', 'justify-between', 'items-center', 'group');
                            const cardName = document.createElement('span');
                            cardName.classList.add('card-name');
                            cardName.textContent = formData.get('card_name');
                            cardName.dataset.cardImage = data.card_image_url;
                            newCard.appendChild(cardName);

                            const removeBtn = document.createElement('button');
                            removeBtn.textContent = 'Remove';
                            removeBtn.setAttribute('data-card-id', data.card_id);
                            removeBtn.classList.add('remove-card-btn', 'text-red-500', 'hover:text-red-700');
                            newCard.appendChild(removeBtn);

                            cardList.appendChild(newCard);

                            // Afficher l'image de la carte dans l'élément de survol
                            hoveredCardImage.src = data.card_image_url; // Met à jour l'image de survol
                        } else {
                            console.error('Error adding card:', data.error);
                        }
                    })
                    .catch(error => console.error('Fetch error:', error));
                });
            }

            // Remove card from list
            cardList.addEventListener('click', function(event) {
                if (event.target.classList.contains('remove-card-btn')) {
                    event.preventDefault();

                    const cardId = event.target.getAttribute('data-card-id');
                    const deleteUrl = `{{ path('app_card_delete', { id: 'PLACEHOLDER' }) }}`.replace('PLACEHOLDER', cardId);

                    fetch(deleteUrl, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.status === 'Card deleted') {
                            event.target.closest('li').remove();
                        } else {
                            console.error('Error removing card:', data.error);
                        }
                    })
                    .catch(error => console.error('Fetch error:', error));
                }
            });
        });
    </script>
{% endif %}


{% endblock %}
